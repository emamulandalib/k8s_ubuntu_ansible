frontend

openssl req -out frontend.mcms.stage.csr -newkey rsa:2048 -nodes -keyout frontend.mcms.stage.key -subj "/CN=frontend.mcms.stage/O=Grameenphone"
openssl x509 -req -days 365 -CA ../mcms.stage.crt -CAkey ../mcms.stage.key -set_serial 0 -in frontend.mcms.stage.csr -out frontend.mcms.stage.crt


kubectl create -n istio-system secret generic mcms-frontend-credential --from-file=key=frontend.mcms.stage.key --from-file=cert=frontend.mcms.stage.crt


cat <<EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: mcmsfrontendstagegateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: mcms-frontend-credential
    hosts:
    - frontend.mcms.stage
EOF


cat <<EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: mcms-frontend-stage
spec:
  hosts:
  - "frontend.mcms.stage"
  gateways:
  - mcmsfrontendstagegateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: mcms-dashboard-service-frontend-stage.mcms.svc.cluster.local
EOF

curl -kv -HHost:frontend.mcms.stage --resolve frontend.mcms.stage:$SECURE_INGRESS_PORT:$INGRESS_HOST https://frontend.mcms.stage:$SECURE_INGRESS_PORT/api/status


curl -kv -HHost:mcms-dashboard-service-gateway-stage.mcms.svc.cluster.local --resolve mcms-dashboard-service-gateway-stage.mcms.svc.cluster.local:$INGRESS_PORT:$INGRESS_HOST http://mcms-dashboard-service-gateway-stage.mcms.svc.cluster.local:$INGRESS_PORT/api/status
